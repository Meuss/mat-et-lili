name: Deploy

# Trigger the workflow on push / pull request events on the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# Authenticate to the server via ssh and run our deployment script
jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v2
      # Step 2: Set up node and install deps
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      # Step 3: Build the assets
      - name: Build assets
        run: npm run build

      # Step 4: Upload built assets as an artifact
      - name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: built-assets
          path: public
          retention-days: 1
  deploy:
    name: Deploy to Server
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v2

      # Step 2: Download built assets
      - name: Download assets
        uses: actions/download-artifact@v3
        with:
          name: built-assets

      # Step 3: Deploy to the server
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            set -e
            echo "Deploying application..."

            # Navigate to the application directory
            cd /web/mat-et-lili

            # Update the repository
            git pull origin production

            # Replace public assets with built assets
            rsync -r --delete public/ /web/mat-et-lili/public/

            # Install PHP dependencies
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

            # Run Laravel commands
            php artisan down
            php artisan migrate --force
            php artisan optimize
            php artisan up

            echo "Deployment completed successfully!"
